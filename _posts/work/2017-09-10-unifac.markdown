---
layout: post
category: work
title:  "Students on Stage"
date:   2018-05-23 00:00:00 +0200
coverimage: /assets/images/previews/sos.jpg
headerimage: /assets/images/headers/sos-header.jpg
imagecol1:
  - /assets/images/details/sos/sos-1.jpg
  - /assets/images/details/sos/sos-2.jpg
  - /assets/images/details/sos/sos-3.jpg
imagecol2:
  - /assets/images/details/sos/sos-4.jpg
  - /assets/images/details/sos/sos-5.jpg
summary: Unifac asked me to spike interest by possible sponsors for their Students on Stage festival.
tag: Web
online: https://studentsonstage.unifac.be
client: Unifac
---

<span class="post-content-text-subtitle" >Brief</span><br/>
Last year Unifac asked me to create a _mobile friendly promosite for Students on Stage_. I saw this as an opportunity to practice my design & development skills in a real world project. We sat together and talked about what the website should display and what minimum design requirements were, for the development part choices were all mine. The website I created was a basic one pager that got the job done.

Tis year they came to me with the same question. The Students on Stage website should be updated for the next edition. The current website was written in just plain html and css with a little react on the interactive parts. No CMS, browser polyfills or continuous integration. It was horrible, time for a complete overhaul.

<span class="post-content-text-subtitle" >Approach</span><br/>
For the design part I took last year's Sketch files and updated them with a _new body font_, more _accessable color contrasts_, new _pictures_ and played around with the _background colors_. We colaborated using Sketch Cloud where they gave comments on my design. Unifac was quickly convinced and I could start coding the new website.

As last year's code was so bad, I decided to _start from scratch_. During my internship at November Five I already had a quick introduction to _react-static_, a static site generator for react. I love that approach, so I wanted to use that framework for the Students on Stage website too. Using _Netlify as continuous integration platform_, I could share a private URL with Unifac members so that they were up to date with my progress. Coding the website was really fun.

<span class="post-content-text-subtitle" >Technologies</span><br/>
Besides the tools I'm already familiar with, I wanted to push myself further and explore some new ones as well.

As colaboration tool we used _Github_. Issues were labeled by type and I gave Unifac access to the private repository so that they could log issues and get a better view on my progress. The Github repository is linked to Netlify. _Netlify triggers a build on every commit to the master branch_. SSL and domain-related stuff is managed in Netlify too.

Last year's website had no CMS at all. This is a very bad practice so I reachearched some headless CMS's that could integrate with react-static. Turns out _Prismic_ was the best option as react-static already had an example on it and it's pretty cheap too. I wrote some basic documentation on how to update the content of the website.

For the styling of my react components I tried out _styled-components_. It's really fun and accessible to use.

Last but not least, I ran the _Google Lighthouse_ audit many many times and continuously strived to improve _SEO_, _accessibility_, _best practices_ and _preformance_ scores.

<span class="post-content-text-subtitle" >Summarized</span><br/>
_I'm very happy on how I transformed the monster of last year into the beauty we recently launched_. The website should now be _easily reusable_ for future editions. I learned about Netlify, react-static, headless CMS's and a lot more.
